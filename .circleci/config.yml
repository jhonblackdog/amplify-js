# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
machine:
  environment:
    PATH: '${PATH}:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin'

defaults: &defaults
  docker:
    - image: cypress/base:10
      environment:
        ## this enables colors in the output
        TERM: xterm

defaults_rn: &defaults_rn
  macos:
    xcode: '11.3.1'
  working_directory: ~/amplify-js-samples-staging

commands:
  restore_pods:
    steps:
      - restore_cache:
          keys:
            - v1-storage-app-pods-{{ checksum "ios/Podfile.lock" }}
            - v1-storage-app-pods-

  save_pods:
    steps:
      - save_cache:
          key: v1-storage-app-pods-{{ checksum "ios/Podfile.lock" }}
          paths:
            - ios/Pods

jobs:
  build:
    <<: *defaults
    working_directory: ~/amplify-js
    resource_class: large
    steps:
      - checkout
      - run: yarn config set workspaces-experimental true
      - run: yarn --frozen-lockfile
      - run: yarn run bootstrap
      - run: yarn run build

      - save_cache:
          key: amplify-ssh-deps-{{ .Branch }}
          paths:
            - ~/.ssh
      - persist_to_workspace:
          root: /root
          paths: amplify-js
  unit_test:
    <<: *defaults
    working_directory: ~/amplify-js
    steps:
      - attach_workspace:
          at: /root
      - run:
          name: 'Run Amplify JS unit tests'
          command: |
            yarn run test --scope @aws-amplify/auth
            yarn run test --scope @aws-amplify/api
            yarn run test --scope @aws-amplify/analytics
            yarn run test --scope @aws-amplify/cache
            yarn run test --scope @aws-amplify/core
            yarn run test --scope @aws-amplify/datastore
            yarn run test --scope @aws-amplify/interactions
            yarn run test --scope @aws-amplify/pubsub
            yarn run test --scope @aws-amplify/predictions
            yarn run test --scope @aws-amplify/storage
            yarn run test --scope @aws-amplify/xr
            yarn run test --scope amazon-cognito-identity-js
            yarn run test --scope aws-amplify-react
            yarn run test --scope aws-amplify-angular
            yarn run test --scope aws-amplify-vue
            yarn run coverage
  integ_setup:
    <<: *defaults
    working_directory: ~/
    steps:
      - run:
          name: 'Clone Amplify JS Samples repo, install cypress, install react samples authenticator and link amplify packages'
          command: |
            mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
            echo $SSH_HOST_PUBLIC_KEY >> ~/.ssh/known_hosts
            git clone $AMPLIFY_JS_SAMPLES_STAGING_URL
            cd amplify-js-samples-staging
            yarn
      - save_cache:
          key: amplify-js-{{ .Branch }}-{{ checksum "amplify-js-samples-staging/yarn.lock" }}
          paths:
            - ~/.cache ## cache both yarn and Cypress
      - persist_to_workspace:
          root: /root
          paths: amplify-js-samples-staging
  integ_react_predictions:
    <<: *defaults
    working_directory: ~/
    steps:
      - attach_workspace:
          at: /root
      - restore_cache:
          key: amplify-js-{{ .Branch }}-{{ checksum "amplify-js-samples-staging/yarn.lock" }}
      - run:
          name: 'Link aws-amplify'
          command: |
            cd amplify-js/packages/aws-amplify
            yarn link
      - run:
          name: 'Link predictions'
          command: |
            cd amplify-js/packages/predictions
            yarn link
      - run:
          name: 'Install Predictions React sample'
          command: |
            cd amplify-js-samples-staging/samples/react/predictions/multi-user-translation
            yarn
            yarn link aws-amplify
            yarn link @aws-amplify/predictions
      - run:
          name: 'Start Predictions React Sample server in background'
          command: |
            cd amplify-js-samples-staging/samples/react/predictions/multi-user-translation
            yarn start
          background: true
      - run:
          name: 'Run cypress tests for Predictions React Sample'
          command: |
            cd amplify-js-samples-staging
            yarn cypress:react --spec "cypress/integration/predictions/multiuser-translation.spec.js"
      - store_artifacts:
          path: amplify-js-samples-staging/cypress/videos
      - store_artifacts:
          path: amplify-js-samples-staging/cypress/screenshots
  integ_react_auth:
    <<: *defaults
    working_directory: ~/
    steps:
      - attach_workspace:
          at: /root
      - restore_cache:
          key: amplify-js-{{ .Branch }}-{{ checksum "amplify-js-samples-staging/yarn.lock" }}
      - run:
          name: 'Install React Authenticator sample'
          command: |
            cd amplify-js-samples-staging/samples/react/auth/with-authenticator
            yarn
      - run:
          name: 'Link aws-amplify'
          command: |
            cd amplify-js/packages/aws-amplify
            yarn link
      - run:
          name: 'Link aws-amplify-react'
          command: |
            cd amplify-js/packages/aws-amplify-react
            yarn link
      - run:
          name: 'Install React Authenticator sample'
          command: |
            cd amplify-js-samples-staging/samples/react/auth/with-authenticator
            yarn
            yarn link aws-amplify
            yarn link aws-amplify-react
      - run:
          name: 'Start React Authenticator Sample server in background'
          command: |
            cd amplify-js-samples-staging/samples/react/auth/with-authenticator
            yarn start
          background: true
      - run:
          name: 'Run cypress tests for React Authenticator Sample'
          command: |
            cd amplify-js-samples-staging
            yarn cypress:react --spec "cypress/integration/auth/authenticator.spec.js"
      - store_artifacts:
          path: amplify-js-samples-staging/cypress/videos
      - store_artifacts:
          path: amplify-js-samples-staging/cypress/screenshots
  integ_angular_auth:
    <<: *defaults
    working_directory: ~/
    steps:
      - attach_workspace:
          at: /root
      - restore_cache:
          key: amplify-js-{{ .Branch }}-{{ checksum "amplify-js-samples-staging/yarn.lock" }}
      - run:
          name: 'Install Angular Authenticator sample'
          command: |
            cd amplify-js-samples-staging/samples/angular/auth/amplify-authenticator
            yarn
      - run:
          name: 'Link aws-amplify'
          command: |
            cd amplify-js/packages/aws-amplify
            yarn link
      - run:
          name: 'Link aws-amplify-angular'
          command: |
            cd amplify-js/packages/aws-amplify-angular
            yarn link
      - run:
          name: 'Link @aws-amplify/analytics'
          command: |
            cd amplify-js/packages/analytics
            yarn link
      - run:
          name: 'Install Angular Authenticator sample'
          command: |
            cd amplify-js-samples-staging/samples/angular/auth/amplify-authenticator
            yarn
            yarn link aws-amplify
            yarn link aws-amplify-angular
            yarn link @aws-amplify/analytics
      - run:
          name: 'Start Angular Authenticator Sample server in background'
          command: |
            cd amplify-js-samples-staging/samples/angular/auth/amplify-authenticator
            yarn start
          background: true
      - run:
          name: 'Run cypress tests for Angular Authenticator Sample'
          command: |
            cd amplify-js-samples-staging
            yarn cypress:angular --spec "cypress/integration/auth/authenticator.spec.js"
      - store_artifacts:
          path: amplify-js-samples-staging/cypress/videos
      - store_artifacts:
          path: amplify-js-samples-staging/cypress/screenshots
  integ_vue_auth:
    <<: *defaults
    working_directory: ~/
    steps:
      - attach_workspace:
          at: /root
      - restore_cache:
          key: amplify-js-{{ .Branch }}-{{ checksum "amplify-js-samples-staging/yarn.lock" }}
      - run:
          name: 'Install Vue Authenticator sample'
          command: |
            cd amplify-js-samples-staging/samples/vue/auth/amplify-authenticator
            yarn
      - run:
          name: 'Link aws-amplify'
          command: |
            cd amplify-js/packages/aws-amplify
            yarn link
      - run:
          name: 'Link aws-amplify-vue'
          command: |
            cd amplify-js/packages/aws-amplify-vue
            yarn link
      - run:
          name: 'Start Vue Authenticator Sample server in background'
          command: |
            cd amplify-js-samples-staging/samples/vue/auth/amplify-authenticator
            yarn start
          background: true
      - run:
          name: 'Run cypress tests for Vue Authenticator Sample'
          command: |
            cd amplify-js-samples-staging
            yarn cypress:vue --spec "cypress/integration/auth/authenticator.spec.js"
      - store_artifacts:
          path: amplify-js-samples-staging/cypress/videos
      - store_artifacts:
          path: amplify-js-samples-staging/cypress/screenshots

  integ_rn_ios_storage:
    <<: *defaults_rn
    working_directory: ~/amplify-js-samples-staging/samples/react-native/storage/StorageApp
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Yarn Install
          command: yarn install --non-interactive --no-lockfile
      # Metro Bundler doesn't work with linked packages so we're copying them from amplify-js
      # TODO: utilize Verdaccio for this instead
      - run:
          name: 'Link aws-amplify'
          command: |
            cp -rf ~/amplify-js/packages/aws-amplify/dist ./node_modules/aws-amplify/dist
            cp -rf ~/amplify-js/packages/aws-amplify/lib ./node_modules/aws-amplify/lib
            cp -rf ~/amplify-js/packages/aws-amplify/lib-esm ./node_modules/aws-amplify/lib-esm

            cp -rf ~/amplify-js/packages/amazon-cognito-identity-js/dist ./node_modules/amazon-cognito-identity-js/dist
            cp -rf ~/amplify-js/packages/amazon-cognito-identity-js/lib ./node_modules/amazon-cognito-identity-js/lib

            cp -rf ~/amplify-js/packages/analytics/dist ./node_modules/@aws-amplify/analytics/dist
            cp -rf ~/amplify-js/packages/analytics/lib ./node_modules/@aws-amplify/analytics/lib
            cp -rf ~/amplify-js/packages/analytics/lib-esm ./node_modules/@aws-amplify/analytics/lib-esm

            cp -rf ~/amplify-js/packages/api/dist ./node_modules/@aws-amplify/api/dist
            cp -rf ~/amplify-js/packages/api/lib ./node_modules/@aws-amplify/api/lib
            cp -rf ~/amplify-js/packages/api/lib-esm ./node_modules/@aws-amplify/api/lib-esm

            cp -rf ~/amplify-js/packages/auth/dist ./node_modules/@aws-amplify/auth/dist
            cp -rf ~/amplify-js/packages/auth/lib ./node_modules/@aws-amplify/auth/lib
            cp -rf ~/amplify-js/packages/auth/lib-esm ./node_modules/@aws-amplify/auth/lib-esm

            cp -rf ~/amplify-js/packages/cache/dist ./node_modules/@aws-amplify/cache/dist
            cp -rf ~/amplify-js/packages/cache/lib ./node_modules/@aws-amplify/cache/lib
            cp -rf ~/amplify-js/packages/cache/lib-esm ./node_modules/@aws-amplify/cache/lib-esm

            cp -rf ~/amplify-js/packages/core/dist ./node_modules/@aws-amplify/core/dist
            cp -rf ~/amplify-js/packages/core/lib ./node_modules/@aws-amplify/core/lib
            cp -rf ~/amplify-js/packages/core/lib-esm ./node_modules/@aws-amplify/core/lib-esm

            cp -rf ~/amplify-js/packages/interactions/dist ./node_modules/@aws-amplify/interactions/dist
            cp -rf ~/amplify-js/packages/interactions/lib ./node_modules/@aws-amplify/interactions/lib
            cp -rf ~/amplify-js/packages/interactions/lib-esm ./node_modules/@aws-amplify/interactions/lib-esm

            cp -rf ~/amplify-js/packages/predictions/dist ./node_modules/@aws-amplify/predictions/dist
            cp -rf ~/amplify-js/packages/predictions/lib ./node_modules/@aws-amplify/predictions/lib
            cp -rf ~/amplify-js/packages/predictions/lib-esm ./node_modules/@aws-amplify/predictions/lib-esm

            cp -rf ~/amplify-js/packages/pubsub/dist ./node_modules/@aws-amplify/pubsub/dist
            cp -rf ~/amplify-js/packages/pubsub/lib ./node_modules/@aws-amplify/pubsub/lib
            cp -rf ~/amplify-js/packages/pubsub/lib-esm ./node_modules/@aws-amplify/pubsub/lib-esm

            cp -rf ~/amplify-js/packages/storage/dist ./node_modules/@aws-amplify/storage/dist
            cp -rf ~/amplify-js/packages/storage/lib ./node_modules/@aws-amplify/storage/lib
            cp -rf ~/amplify-js/packages/storage/lib-esm ./node_modules/@aws-amplify/storage/lib-esm

            cp -rf ~/amplify-js/packages/amplify-ui/dist ./node_modules/@aws-amplify/ui/dist
            cp -rf ~/amplify-js/packages/amplify-ui/lib ./node_modules/@aws-amplify/ui/lib

            cp -rf ~/amplify-js/packages/xr/dist ./node_modules/@aws-amplify/xr/dist
            cp -rf ~/amplify-js/packages/xr/lib ./node_modules/@aws-amplify/xr/lib
            cp -rf ~/amplify-js/packages/xr/lib-esm ./node_modules/@aws-amplify/xr/lib-esm

      - restore_pods
      - run:
          name: Install CocoaPods
          command: |
            cd ios
            pod install
      - save_pods
      - run:
          background: true
          command: xcrun simctl boot "iPhone 11" || true
          name: Start iOS simulator (background)
      - run:
          background: true
          command: yarn start
          name: Start Metro Packager (background)
      - run:
          name: Configure Detox
          environment:
            HOMEBREW_NO_AUTO_UPDATE: 1
          command: |
            brew tap wix/brew
            brew install applesimutils
            yarn global add detox-cli
      - run:
          name: Detox Build
          command: detox build -c ios.sim.debug
      - run:
          environment:
            JEST_JUNIT_OUTPUT_DIR: 'reports/junit'
            JEST_JUNIT_OUTPUT_NAME: 'detox-test-results.xml'
          name: Detox Test
          command: detox test -c ios.sim.debug -u
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

  deploy:
    <<: *defaults
    working_directory: ~/amplify-js
    steps:
      - attach_workspace:
          at: /root
      - restore_cache:
          keys:
            - amplify-ssh-deps-{{ .Branch }}
            - amplify-ssh-deps
      - run:
          name: 'Publish to Amplify Package'
          command: |
            if [ -z "$CIRCLE_PULL_REQUEST" ]; then
              echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
              npm whoami
              git config --global user.email $GITHUB_EMAIL
              git config --global user.name $GITHUB_USER
              git status
              git --no-pager diff
              yarn run publish:$CIRCLE_BRANCH
            else
              echo "Skipping deploy."
            fi

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - unit_test:
          requires:
            - build
      - integ_setup:
          filters:
            branches:
              only:
                - release
                - master
                - 1.0-stable
          requires:
            - build
      - integ_react_predictions:
          filters:
            branches:
              only:
                - release
                - master
                - 1.0-stable
          requires:
            - integ_setup
      - integ_react_auth:
          filters:
            branches:
              only:
                - release
                - master
                - 1.0-stable
          requires:
            - integ_setup
      - integ_angular_auth:
          filters:
            branches:
              only:
                - release
                - master
                - 1.0-stable
          requires:
            - integ_setup
      - integ_vue_auth:
          filters:
            branches:
              only:
                - release
                - master
                - 1.0-stable
          requires:
            - integ_setup
      - integ_rn_ios_storage:
          filters:
            branches:
              only:
                - release
                - master
                - 1.0-stable
          requires:
            - integ_setup
      - deploy:
          filters:
            branches:
              only:
                - release
                - master
                - beta
                - 1.0-stable
          requires:
            - unit_test
            - integ_react_predictions
            - integ_react_auth
            - integ_angular_auth
            - integ_vue_auth
            - integ_rn_ios_storage
